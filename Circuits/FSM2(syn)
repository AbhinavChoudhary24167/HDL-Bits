module top_module(
    input clk,
    input reset,    // Synchronous reset to OFF
    input j,
    input k,
    output out); //  

    parameter OFF=0, ON=1; 
    reg state, next_state;

    always @(*) begin
        // State transition logic
        case(state)
            ON : if (k == 1)
                	next_state <= OFF;
            	else
                    next_state <= ON;
            OFF : if (j == 1)
                	next_state <= ON;
            	  else
                    next_state <= OFF;
            default : next_state <= OFF;
        endcase
            
    end

    always @(posedge clk) begin
        // State flip-flops with synchronous reset
        if (reset)
            state <= OFF;
        else
            state <= next_state;
    end

    // Output logic
    // assign out = (state == ...);
     always@(*)begin
        case (state)
            ON : out = 1;
            OFF : out = 0;
        endcase
    end

endmodule
